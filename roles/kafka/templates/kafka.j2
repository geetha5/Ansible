#!/bin/bash

# /etc/init.d/kafka

# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
# Broker
#
# chkconfig: 2345 89 9
# description: kafka

# broker install path
KAFKA='/opt/{{ kafka_dir_name }}'

source /etc/rc.d/init.d/functions

RETVAL=0
PIDFILE="/var/lib/zookeeper/data/kafka_server.pid"
desc="kafka broker daemon"

supervisor_check() {
    if [[ -f /etc/supervisor/conf.d/kafka.conf ]]; then
        echo "Kafka is started with supervisor, please use that to control it"
        exit 1
    fi
}

start() {
    echo -n $"Starting $desc (kafaka): "
    daemon --user kafka $KAFKA/bin/kafka-server-start.sh -daemon $KAFKA/config/server.properties
    RETVAL=$?
    echo
    [ $RETVAL -eq 0 ] && touch /var/lock/subsys/kafka
    return $RETVAL
}

stop() {
    echo -n $"Stopping $desc (kafka): "
    daemon --user kafka $KAFKA/bin/kafka-server-stop.sh
    RETVAL=$?
    sleep 5
    echo
    [ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/kafka $PIDFILE
}

restart() {
    stop
    start
}

get_pid() {
    cat "$PIDFILE"
}

checkstatus() {
    status -p $PIDFILE ${JAVA_HOME}/bin/java
    RETVAL=$?
}

condrestart() {
    [ -e /var/lock/subsys/kafka ] && restart || :
}

case "$1" in
    start)
      supervisor_check
      start
      ;;
    stop)
      supervisor_check
      stop
      ;;
    status)
      supervisor_check
      checkstatus
      ;;
    restart)
      supervisor_check
      restart
      ;;
    condrestart)
      supervisor_check
      condrestart
      ;;
    *)
      echo $"Usage: $0 {start|stop|status|restart|condrestart}"
      exit 1
esac

exit $RETVAL