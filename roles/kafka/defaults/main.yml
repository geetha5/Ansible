---

# kafka_package_url - The download url of the kafka broker package, this
# can be an http(s) url or an s3 url
kafka_package_url: http://www.namesdir.com/mirrors/apache/kafka/0.11.0.0/kafka_2.11-0.11.0.0.tgz

# kafka_use_supervisor - This will trigger to install the supervisor config and use supervisor restart handlers
kafka_use_supervisor: yes

## Monitoring Settings ##
# kafka_enable_all_monitoring - A boolean to enable all monitoring
kafka_enable_all_monitoring: yes

# Kafka Health Check Settings
# kafka_hc_package_url - The http or s3 url of the kafka-health-check package
kafka_hc_package_url: https://github.com/andreas-schroeder/kafka-health-check/releases/download/v0.0.2/kafka-health-check_0.0.2_linux_amd64.tar.gz

# kafka_hc_check_interval - The check interval for the kafka health check
kafka_hc_check_interval: 10s

# kafka_hc_replication_failure_count - The failure count before a broker is unhealthy
kafa_hc_replication_failure_count: 5

# kafka_hc_replication_topic - The topic to use for replication checks
kafka_hc_replication_topic: broker-replication-check

# kafka_hc_port - The port to use for kafka-health-check
kafka_hc_port: 8000

## Kafka Libraries For Scripts ##
kafka_kazoo_package_version: none

kafka_kazoo_package_state: present

## Cluster Settings ##

# kafka_cluster_type - This is the either standalone or cluster
# standalone is if this this is the only kafka server (colocated with
# zookeeper), and cluster is if this server is part a kafka broker cluster
kafka_cluster_type: standalone

# kafka_broker_count - This is the number of brokers that will be created
# this will be used for creating the replication test topic
kafka_broker_count: 1

# kafka_mount_log_ebs - This is a boolean on if an external log drive should be mounted
kafka_mount_log_ebs: yes

## Kafka Broker Settings ##

# kafka_zookeeper_server_list - the list of zookeeper servers and their client port
kafka_zookeeper_server_list:

## Kafka Config Settings ##

# Kafka DNS Settings #
# kafka_dns_name - The DNS name that is used by clients - standalone only
kafka_dns_name: test.wexkafkatest.net

# kafka_dns_prefix - The DNS prefix for the broker DNS - Clustered only
# kafka_dns_prefix:

# kafka_dns_domain - The DNS domain for the broker DNS
kafka_dns_domain: wexkafkatest.net

# kafka_network_threads - The number of threads that the server uses for receiving requests
kafka_network_threads: 3

# kafka_io_threads - The number of threads that the server uses for processing requests
kafka_io_threads: 8

# kafka_send_buffer_bytes - The send buffer (SO_SNDBUF) used by the socket server
kafka_send_buffer_bytes: 102400

# kafka_receive_buffer_bytes - The receive buffer (SO_RCVBUF) used by the socket server
kafka_receive_buffer_bytes: 102400

# kafka_request_max_bytes - The maximum size of a request that the socket server will accept (protection against OOM)
kafka_request_max_bytes: 104857600

# kafka_log_dir - The directory to store kafka logs
kafka_log_dirs: /tmp/kafka-logs

# kafka_partition_number - The default number of log partitions per topic. More partitions allow greater
# parallelism for consumption, but this will also result in more files across
# the brokers.
kafka_partition_number: 1

# kafka_recovery_threads_per_data_dir - The number of threads per data directory to be used for
# log recovery at startup and flushing at shutdown. This value is recommended to be increased
# for installations with data dirs located in RAID array.
kafka_recovery_threads_per_data_dir: 1

# The replication factor for the group metadata internal topics "__consumer_offsets" and "__transaction_state"
# For anything other than development testing, a value greater than 1 is recommended for to ensure availability such as 3.
kafka_offsets_topic_replication_factor: 1
kafka_transaction_log_replication_factor: 1
kafka_transaction_log_min_isr: 1

# kafka_log_retention_hours - The minimum age of a log file to be eligible for deletion due to age
kafka_log_retention_hours: 168

# kafka_log_segment_bytes - The maximum size of a log segment file.
kafka_log_segment_bytes: 1073741824

# kafka_log_interval_check_ms - The interval at which log segments are checked to see if they can be deleted
kafka_log_interval_check_ms: 300000

# kafka_zookeeper_connection_timeout_ms - Timeout in ms for connecting to zookeeper
kafka_zookeeper_connection_timeout_ms: 6000

# kafka_group_rebalance_delay - The following configuration specifies the time, in milliseconds,
# that the GroupCoordinator will delay the initial consumer rebalance.
kafka_group_rebalance_delay: 0

## kafka topics ##

# kafka_topics:
#   <topic_name>:
#     replication_factor: <int of replication factor>
#     partitions: <int or number of partitions>