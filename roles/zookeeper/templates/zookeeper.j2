#!/bin/bash

# /etc/init.d/zookeeper

# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#
# ZooKeeper
#
# chkconfig: 2345 89 9
# description: zookeeper

# ZooKeeper install path (where you extracted the tarball)
ZOOKEEPER='/opt/{{ zookeeper_dir_name }}'

# zookeeper config settings
export ZOO_DATADIR="{{ zookeeper_data_dir }}"
export ZOO_LOG_DIR="{{ zookeeper_log_dir }}"
export ZOO_LOG4J_PROP="{{ zookeeper_log_level }}"

source /etc/rc.d/init.d/functions
source $ZOOKEEPER/bin/zkEnv.sh

RETVAL=0
PIDFILE="{{ zookeeper_data_dir }}/zookeeper_server.pid"
desc="ZooKeeper daemon"

supervisor_check() {
    if [[ -f /etc/supervisor/conf.d/kafka.conf ]]; then
        echo "Zookeeper is started with supervisor, please use that to control it"
        exit 1
    fi
}

start() {
  echo -n $"Starting $desc (zookeeper): "
  daemon --user zookeeper $ZOOKEEPER/bin/zkServer.sh start
  RETVAL=$?
  echo
  [ $RETVAL -eq 0 ] && touch /var/lock/subsys/zookeeper
  return $RETVAL
}

stop() {
  echo -n $"Stopping $desc (zookeeper): "
  daemon --user zookeeper $ZOOKEEPER/bin/zkServer.sh stop
  RETVAL=$?
  sleep 5
  echo
  [ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/zookeeper $PIDFILE
}

restart() {
  stop
  start
}

get_pid() {
  cat "$PIDFILE"
}

checkstatus(){
  status -p $PIDFILE ${JAVA_HOME}/bin/java
  RETVAL=$?
}

condrestart(){
  [ -e /var/lock/subsys/zookeeper ] && restart || :
}

case "$1" in
  start)
    supervisor_check
    start
    ;;
  stop)
    supervisor_check
    stop
    ;;
  status)
    supervisor_check
    checkstatus
    ;;
  restart)
    supervisor_check
    restart
    ;;
  condrestart)
    supervisor_check
    condrestart
    ;;
  *)
    echo $"Usage: $0 {start|stop|status|restart|condrestart}"
    exit 1
esac

exit $RETVAL